// <auto-generated />
using IntroductionEFCore.DBLib.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntroductionEFCore.DBLib.Migrations
{
    [DbContext(typeof(PokemonDBContext))]
    partial class PokemonDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElementPokemonSpeciesPokemon", b =>
                {
                    b.Property<int>("ElementPokemonsIdentifier")
                        .HasColumnType("int");

                    b.Property<int>("SpeciesPokemonsIdentifier")
                        .HasColumnType("int");

                    b.HasKey("ElementPokemonsIdentifier", "SpeciesPokemonsIdentifier");

                    b.HasIndex("SpeciesPokemonsIdentifier");

                    b.ToTable("ElementPokemonSpeciesPokemon");
                });

            modelBuilder.Entity("IntroductionEFCore.DBLib.Models.ElementPokemon", b =>
                {
                    b.Property<int>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identifier"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identifier");

                    b.ToTable("ElementPokemon");
                });

            modelBuilder.Entity("IntroductionEFCore.DBLib.Models.Pokemon", b =>
                {
                    b.Property<int>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identifier"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesPokemonIdentifier")
                        .HasColumnType("int");

                    b.HasKey("Identifier");

                    b.HasIndex("SpeciesPokemonIdentifier");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("IntroductionEFCore.DBLib.Models.SpeciesPokemon", b =>
                {
                    b.Property<int>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identifier"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identifier");

                    b.ToTable("SpeciesPokemon");
                });

            modelBuilder.Entity("ElementPokemonSpeciesPokemon", b =>
                {
                    b.HasOne("IntroductionEFCore.DBLib.Models.ElementPokemon", null)
                        .WithMany()
                        .HasForeignKey("ElementPokemonsIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntroductionEFCore.DBLib.Models.SpeciesPokemon", null)
                        .WithMany()
                        .HasForeignKey("SpeciesPokemonsIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntroductionEFCore.DBLib.Models.Pokemon", b =>
                {
                    b.HasOne("IntroductionEFCore.DBLib.Models.SpeciesPokemon", "SpeciesPokemon")
                        .WithMany("Pokemons")
                        .HasForeignKey("SpeciesPokemonIdentifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpeciesPokemon");
                });

            modelBuilder.Entity("IntroductionEFCore.DBLib.Models.SpeciesPokemon", b =>
                {
                    b.Navigation("Pokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
